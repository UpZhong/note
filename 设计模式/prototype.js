/**
 * 原型模式
 * 
 * 定义： 
 * 使用原型实例指定创建对象的种类 ，并且通过克隆这些原型创建新的对象
 * 
 * 本质：
 * 复制原型对象来创建新对象(对象的克隆)
 * 
 * 何时使用：
 * 1.创建新对象成本较大，新的对象可以通过原型模式对已有对象进行复制来获得
 * 2.系统要保存对象的状态，而对象的状态变化很小或者对象本身占用内存较少时
 * 
 * 优点：
 * 1.对复杂对象可通过复制已有对象简化创建过程
 * 2.扩展性较好（由于原型模式中提供了抽象原型类，客户对可针对抽象原型类进行编程）
 * 3.提供了简化的创建结构，无需专门的工厂类来创建产品
 * 4.可以使用深克隆的方式保存对象的状态
 * 
 * 缺点：
 * 1.需要为每一个类配备一个克隆方法，而且该克隆方法位于一个类的内部，当对已有类进行改造时，需要修改源代码，违反了开闭要原则。
 * 2.实现深克隆时需要编写较为复杂的代码。
 * 
 */

class Person {
    constuctor(name) {
        this.name = name;
    }
    getName() {
        return this.name;
    }
}
class Student extends Person {
    constuctor(name) {
        super(name);
    }
    sayHello() {
        alert("hello");
    }
}
var student = new Student("Alice");
student.getName();